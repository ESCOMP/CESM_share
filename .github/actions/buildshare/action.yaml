name: SHARE build and cache
description: 'Build the SHARE library'
inputs:
  share_version:
    description: 'Tag in the SHARE repository to use'
    default: main
    required: False
    type: string
  pio_path:
    description: 'Path to the installed parallelio code root'
    default: $HOME/pio
    required: False
    type: string
  esmfmkfile:
    description: 'Path to the installed ESMF library mkfile'
    default: $HOME/ESMF/lib/libg/Linux.gfortran.64.openmpi.default/esmf.mk 
    required: False
    type: string
  pfunit_root:
    description: 'Path to installed pfunit library'
    default: $GITHUB_WORKSPACE/pfunit
    required: False
    type: string
  src_root:
    description: 'Path to share source'
    default: $GITHUB_WORKSPACE
    required: False
    type: string
  cmake_flags:
    description: 'Extra flags for cmake command'
    default: -Wno-dev
    required: False
    type: string
  install_prefix:
    description: 'Install path of share'
    default: $HOME/share
    required: False
    type: string
runs:
  using: composite
  steps:
    - id : Build-SHARE
      shell: bash
      run: |
        mkdir build-share
        pushd build-share
        # this is machine specific
        export LDFLAGS="-L/usr/lib/x86_64-linux-gnu -lnetcdf -lnetcdff -lpnetcdf -Wl,--unresolved-symbols=ignore-all"
        export PFUNIT_DIR=${{ inputs.pfunit_root }}/build
        export ESMFMKFILE=${{ inputs.esmfmkfile }}
        export PIO_ROOT=${{ inputs.pio_path }}
        cmake ${{ inputs.cmake_flags }} ${{ inputs.src_root }}
        make VERBOSE=1
        popd
